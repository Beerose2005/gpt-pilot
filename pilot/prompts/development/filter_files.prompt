You are working on a {{ app_type }} called "{{ name }}", writing the code for the entire application.

Here is a high level description of "{{ name }}":
```
{{ app_summary }}
```
{{ features_list }}

You are currently working on, and have to focus only on, this task:
`{{ current_task.description }}`

A part of the app is already finished. Here is the list of files and descriptions that the app currently contains:
{% for fpath, summary in file_summaries.items() %}
* `{{ fpath }}`: {{ summary }}{% endfor %}

{% if user_feedback %}User who was using the app "{{ name }}" sent you this feedback:
```
{{ user_feedback }}
```
{% endif %}{% if next_solution_to_try %}
Focus on solving this issue in the following way:
```
{{ next_solution_to_try }}
```
{% endif %}

**IMPORTANT**
The files necessary for a developer to understand, modify, implement, and test the current task are considered to be relevant files.
Your job is select  which of existing files are relevant for the current task. From the above list of files that app currently contains, you have to select ALL files that are relevant to the current task. Think step by step of everything that has to be done in this task and which files contain needed information. If you are unsure if a file is relevant or not, it is always better to include it in the list of relevant files.

{{ relative_paths }}

You are working on an app called "{{ state.branch.project.name }}".

{% include "partials/project_details.prompt" %}

{# This is actually updating of tasks and not epics. Reason why this prompt uses word "epic" instead of "task" is that LLM gives very detailed description and creates very big plan if we ask him to create tasks. When asked to create epics he focuses on much bigger picture and gives high level description which is what we want. #}
Development plan for that {{ task_type }} was created and the {{ task_type }} was then broken down to smaller epics so that it's easier for development.

Here are epics that are finished so far:
```
{% for task in finished_tasks %}
- Epic #{{ loop.index }}
Description: {{ task.description }}

{% endfor %}
```

Here are epics that still have to be implemented:
```
{% for task in state.unfinished_tasks %}
- Epic #{{ finished_tasks|length + loop.index }}
Description: {{ task.description }}

{% endfor %}
```

{% if finished_tasks %}
This is the last epic you were working on:
```
{{ finished_tasks[-1].description }}
```
{% endif %}

While working on that last epic, you were iterating based on user feedbacks for this {{ task_type }}. Here is list of all iterations:
```
{% for iteration in state.iterations %}
- Iteration #{{ loop.index }}:

User feedback: {{ iteration.user_feedback }}
Developer solution: {{ iteration.description }}
{% endfor %}
```

{% if modified_files|length > 0 %}
Here are files that were modified during this epic implementation:
---start_of_current_files---
{% for file in modified_files %}
**{{ file.path }}** ({{ file.content.content.splitlines()|length }} lines of code):
```
{{ file.content.content }}
```
{% endfor %}
---end_of_current_files---
{% endif %}

{% include "partials/project_tasks.prompt" %}

You need to think step by step what was done in last epic and update development plan if needed. All iterations that were mentioned were executed and finished successfully and that needs to be reflected in updated development plan.
As output you have to give 2 things:
1. Reword/update current epic, "updated_current_epic", ONLY IF NECESSARY, based on what is implemented so far. Consider current epic description, all iterations that were implemented during this epic and all changes that were made to the code.

2. Give me updated list of epics that still have to be implemented. Take into consideration all epics in current development plan, previous epics that were finished and everything that was implemented in this epic. There should be minimum possible number of epics that still have to be executed to finish the app. You must list only epics that need implementation and were not done in scope of previous epics or during iterations on current epic. Do not create new epics, only remove epics from list of epics that still have to be implemented in case they were implemented during current epic.
